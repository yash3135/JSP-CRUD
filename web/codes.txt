# resize img

from PIL import Image
from realesrgan import RealESRGAN
import torch

# Load image
input_image = Image.open("low_res_image.jpg").convert("RGB")

# Set device
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

# Load model
model = RealESRGAN(device, scale=4)  # You can change scale to 2 or 4
model.load_weights('RealESRGAN_x4.pth')  # This will auto-download if not found

# Enhance image
sr_image = model.predict(input_image)

# Save and show
sr_image.save("super_res_image.jpg")
sr_image.show()

===============================================================================================

# face and eye detection



---



import cv2

# Load image
img = cv2.imread('person.jpg')
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# Load pre-trained Haar cascades (ML-based)
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
eye_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_eye.xml')

# Detect faces
faces = face_cascade.detectMultiScale(gray)

for (x, y, w, h) in faces:
    cv2.rectangle(img, (x, y), (x+w, y+h), (255, 0, 0), 2)
    roi_gray = gray[y:y+h, x:x+w]
    roi_color = img[y:y+h, x:x+w]

    # Detect eyes inside the face
    eyes = eye_cascade.detectMultiScale(roi_gray)
    for (ex, ey, ew, eh) in eyes:
        cv2.rectangle(roi_color, (ex, ey), (ex+ew, ey+eh), (0, 255, 0), 2)

# Save the result
cv2.imwrite('output.jpg', img)
print("Detection done. Output saved as 'output.jpg'")


===============================================================================================

# play video using open cv


import cv2

# Load face detection model (pre-trained)
face_model = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Open video file or webcam (0 = default camera)
cap = cv2.VideoCapture("your_video.mp4")  # Replace with 0 for webcam

while True:
    success, frame = cap.read()
    if not success:
        break

    # Convert to grayscale for face detection
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect faces
    faces = face_model.detectMultiScale(gray)

    # Draw green boxes around faces
    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x+w, y+h), (0, 255, 0), 2)

    # Show the frame
    cv2.imshow("Video with Face Detection", frame)

    # Break loop on 'q' key
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release resources
cap.release()
cv2.destroyAllWindows()

=====================================================================================================
ASP.NET
=====================================================================================================
student crud
=====================================================================================================
student.aspx.cs
=====================================================================================================
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data.SqlClient;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Diagnostics;

namespace crud_test
{
    public partial class students : System.Web.UI.Page
    {
        string conString = ConfigurationManager.ConnectionStrings["dbConnection"].ConnectionString;
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                Debug.WriteLine(conString);
                LoadData();
            }
        }

        void LoadData()
        {
            using (SqlConnection con = new SqlConnection(conString))
            {
                using (SqlDataAdapter da = new SqlDataAdapter("SELECT * FROM tbl_students", con))
                {
                    DataTable dt = new DataTable();
                    da.Fill(dt);
                    GridView1.DataSource = dt;
                    GridView1.DataBind();
                }
            }
        }

        protected void btnAdd_Click(object sender, EventArgs e)
        {
            using (SqlConnection con = new SqlConnection(conString))
            {
                string query = "INSERT INTO tbl_students (name, roll_no, Age) VALUES (@name, @roll_no, @Age)";
                using (SqlCommand cmd = new SqlCommand(query, con))
                {
                    cmd.Parameters.AddWithValue("@name", txtName.Text);
                    cmd.Parameters.AddWithValue("@roll_no", txtRollNo.Text);
                    cmd.Parameters.AddWithValue("@Age", txtAge.Text);
                    con.Open();
                    cmd.ExecuteNonQuery();
                    con.Close();
                }
            }
            LoadData();
        }

        protected void GridView1_RowDeleting(object sender, System.Web.UI.WebControls.GridViewDeleteEventArgs e)
        {
            int id = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value);
            using (SqlConnection con = new SqlConnection(conString))
            {
                string query = "DELETE FROM tbl_students WHERE Id=@Id";
                using (SqlCommand cmd = new SqlCommand(query, con))
                {
                    cmd.Parameters.AddWithValue("@Id", id);
                    con.Open();
                    cmd.ExecuteNonQuery();
                    con.Close();
                }
            }
            LoadData();
        }

        protected void GridView1_RowEditing(object sender, System.Web.UI.WebControls.GridViewEditEventArgs e)
        {
            GridView1.EditIndex = e.NewEditIndex;
            LoadData();
        }

        protected void GridView1_RowCancelingEdit(object sender, System.Web.UI.WebControls.GridViewCancelEditEventArgs e)
        {
            GridView1.EditIndex = -1;
            LoadData();
        }

        protected void GridView1_RowUpdating(object sender, System.Web.UI.WebControls.GridViewUpdateEventArgs e)
        {
            int id = Convert.ToInt32(GridView1.DataKeys[e.RowIndex].Value);
            TextBox txtName = (TextBox)GridView1.Rows[e.RowIndex].Cells[1].Controls[0];
            TextBox txtRollNo = (TextBox)GridView1.Rows[e.RowIndex].Cells[2].Controls[0];
            TextBox txtAge = (TextBox)GridView1.Rows[e.RowIndex].Cells[3].Controls[0];

            using (SqlConnection con = new SqlConnection(conString))
            {
                string query = "UPDATE tbl_students SET name=@name, roll_no=@roll_no, Age=@Age WHERE Id=@Id";
                using (SqlCommand cmd = new SqlCommand(query, con))
                {
                    cmd.Parameters.AddWithValue("@Id", id);
                    cmd.Parameters.AddWithValue("@name", txtName.Text);
                    cmd.Parameters.AddWithValue("@roll_no", txtRollNo.Text);
                    cmd.Parameters.AddWithValue("@Age", txtAge.Text);
                    con.Open();
                    cmd.ExecuteNonQuery();
                    con.Close();
                }
            }

            GridView1.EditIndex = -1;
            LoadData();
        }
    }
}
=====================================================================================================
student.aspx
=====================================================================================================
<%@ Page Title="" Language="C#" MasterPageFile="~/Site.Master" AutoEventWireup="true" CodeBehind="students.aspx.cs" Inherits="crud_test.students" %>

<asp:Content ID="Content1" ContentPlaceHolderID="MainContent" runat="server">
    <div class="container mt-5">
        <h2 class="text-center">CRUD Operations</h2>
        <div class="mb-3">
            <label>Name:</label>
            <asp:TextBox ID="txtName" CssClass="form-control" runat="server"></asp:TextBox>
        </div>
        <div class="mb-3">
            <label>Roll No:</label>
            <asp:TextBox ID="txtRollNo" CssClass="form-control" runat="server"></asp:TextBox>
        </div>
        <div class="mb-3">
            <label>Age:</label>
            <asp:TextBox ID="txtAge" CssClass="form-control" runat="server"></asp:TextBox>
        </div>

        <asp:LinkButton ID="btnAdd" runat="server" CssClass="btn btn-success" OnClick="btnAdd_Click">
            <i class="bi bi-plus-lg me-1"></i> Add
        </asp:LinkButton>

        <hr />
        <asp:GridView ID="GridView1" runat="server" CssClass="table table-bordered mt-3"
            AutoGenerateColumns="False" DataKeyNames="Id"
            OnRowDeleting="GridView1_RowDeleting"
            OnRowEditing="GridView1_RowEditing"
            OnRowUpdating="GridView1_RowUpdating"
            OnRowCancelingEdit="GridView1_RowCancelingEdit">

            <Columns>
                <asp:BoundField DataField="id" HeaderText="ID" ReadOnly="True" />

                <asp:BoundField DataField="name" HeaderText="Name" />

                <asp:BoundField DataField="roll_no" HeaderText="roll no" />

                <asp:BoundField DataField="Age" HeaderText="Age" />

                <asp:TemplateField HeaderText="Actions">
                    <EditItemTemplate>
                        <asp:LinkButton ID="lnkUpdate" runat="server" CommandName="Update" CssClass="btn btn-success btn-sm">
                        <i class="bi bi-check2-all me-1"></i>  Update
                        </asp:LinkButton>

                        <asp:LinkButton ID="lnkCancel" runat="server" CommandName="Cancel" CssClass="btn btn-secondary btn-sm">
                        <i class="bi bi-x-lg me-1"></i> Cancel
                        </asp:LinkButton>
                    </EditItemTemplate>

                    <ItemTemplate>
                        <asp:LinkButton ID="lnkEdit" runat="server" CommandName="Edit" CssClass="btn btn-warning btn-sm">
                        <i class="bi bi-pencil-square me-1"></i> Edit
                        </asp:LinkButton>

                        <asp:LinkButton ID="lnkDelete" runat="server" CommandName="Delete" CssClass="btn btn-danger btn-sm"
                            OnClientClick="return confirm('Are you sure you want to delete this item?');">
                                <i class="bi bi-trash me-1"></i>Delete
                        </asp:LinkButton>
                    </ItemTemplate>
                </asp:TemplateField>

            </Columns>
        </asp:GridView>

    </div>

</asp:Content>
=====================================================================================================
android crud link: https://github.com/Yashkotecha1/Sqlite_proct
=====================================================================================================
android crud link: https://github.com/Yashkotecha1/Sqlite_demo
=====================================================================================================

